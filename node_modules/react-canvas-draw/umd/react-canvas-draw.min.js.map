{"version":3,"sources":["webpack://ReactCanvasDraw/webpack/universalModuleDefinition","webpack://ReactCanvasDraw/webpack/bootstrap","webpack://ReactCanvasDraw/external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack://ReactCanvasDraw/./node_modules/lazy-brush/lib/LazyPoint.js","webpack://ReactCanvasDraw/./node_modules/lazy-brush/lib/Point.js","webpack://ReactCanvasDraw/./node_modules/catenary-curve/lib/Point.js","webpack://ReactCanvasDraw/./node_modules/lazy-brush/lib/index.js","webpack://ReactCanvasDraw/./node_modules/catenary-curve/lib/index.js","webpack://ReactCanvasDraw/./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","webpack://ReactCanvasDraw/./node_modules/lazy-brush/lib/LazyBrush.js","webpack://ReactCanvasDraw/./node_modules/catenary-curve/lib/Catenary.js","webpack://ReactCanvasDraw/(webpack)/buildin/global.js","webpack://ReactCanvasDraw/./src/coordinateSystem.js","webpack://ReactCanvasDraw/./src/interactionStateMachine.js","webpack://ReactCanvasDraw/./src/makePassiveEventOption.js","webpack://ReactCanvasDraw/./src/index.js","webpack://ReactCanvasDraw/./src/drawImage.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","obj","_createClass","defineProperties","target","props","length","descriptor","configurable","writable","Constructor","protoProps","staticProps","_Point2","_Point3","default","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","LazyPoint","_Point","this","__proto__","getPrototypeOf","apply","arguments","subClass","superClass","constructor","setPrototypeOf","_inherits","point","x","y","angle","distance","angleRotated","Math","PI","sin","cos","diff","getDifferenceTo","sqrt","pow","atan2","Point","LazyBrush","undefined","_LazyBrush2","_interopRequireDefault","_LazyPoint2","Catenary","_Catenary2","MapShim","Map","getIndex","arr","result","some","entry","index","class_1","__entries__","set","push","delete","entries","splice","has","clear","forEach","callback","ctx","_i","_a","isBrowser","document","global$1","global","Function","requestAnimationFrame$1","requestAnimationFrame","setTimeout","Date","now","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","indexOf","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","observe","attributes","childList","characterData","subtree","removeEventListener","disconnect","_b","propertyName","getInstance","instance_","defineConfigurable","keys","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","reduce","size","position","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","paddings","positions_1","getPaddings","horizPad","left","right","vertPad","top","bottom","width","height","boxSizing","round","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","Constr","contentRect","DOMRectReadOnly","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","_this","observation","map","WeakMap","ResizeObserver","method","_LazyPoint","_ref","_ref$radius","radius","_ref$enabled","enabled","_ref$initialPoint","initialPoint","_isEnabled","pointer","brush","_hasMoved","toObject","newPointerPoint","_ref2","_ref2$both","both","equalsTo","update","getDistanceTo","getAngleTo","moveByAngle","_ref$segments","segments","_ref$iterationLimit","iterationLimit","p1","p2","context","point1","point2","chainLength","isFlipped","curveData","isStraight","h","v","a","getCatenaryParameter","log","cosh","offsetX","offsetY","getCurve","mx","my","drawLine","drawCurve","limit","acosh","prevx","count","sinh","data","moveTo","lineTo","ox","oy","temp","quadraticCurveTo","g","e","NULL_VIEW_POINT","freeze","untransformedX","untransformedY","NULL_BOUNDS","canvasWidth","canvasHeight","viewMin","viewMax","IDENTITY","b","f","CoordinateSystem","scaleExtents","documentSize","scale","Set","setView","min","max","canvasRect","maxx","minx","_view","maxy","miny","view","newView","clampView","_viewChangeListeners","listener","deltaScale","clientPoint","viewPt","clientPointToViewPoint","clientPtPostScale","viewPointToClientPoint","clientX","clientY","relativeClientX","relativeClientY","relativeX","relativeY","add","_scaleExtents","_documentSize","_canvas","canvas","getBoundingClientRect","SUPPRESS_SCROLL","preventDefault","DefaultState","canvasDraw","disabled","enablePanAndZoom","mouseZoomFactor","DisabledState","ctrlKey","coordSystem","scaleAtClientPoint","deltaY","clientPointFromEvent","PanState","handleDrawStart","WaitForPinchState","viewPointFromEvent","lazy","handleMouseWheel","handleDrawMove","handleDrawEnd","dragStart","panStart","dx","dy","touches","ScaleOrPanState","DrawingState","clientPt","deferredPoints","valueOf","startTimestamp","startClientPoint","issueDeferredPoints","nextState","deferredPt","syntheticEvt","SyntheticEvent","start","getTouchMetrics","scaleStart","recentMetrics","centroid","TouchScaleState","TouchPanState","t1x","t1y","t2x","t2y","t1","t2","scaleOrPanState","ref","dScale","isDisabled","isEnabled","isDrawing","points","clampPointToDocument","drawPoints","brushColor","brushRadius","saveLine","changedTouches","passiveSupported","options","midPointBtw","canvasStyle","display","canvasTypes","CanvasDraw","lines","slice","erasedLines","pop","clearExceptErasedLines","simulateDrawingLines","immediate","triggerOnChange","resetView","JSON","stringify","fileType","useBgImage","backgroundColour","canvasToExport","drawing","getContext","storedImageData","getImageData","compositeOperation","globalCompositeOperation","imgSrc","drawImage","fillStyle","fillRect","imageData","toDataURL","clearRect","putImageData","saveData","immediateLoading","Error","parse","scaleX","scaleY","scaleAvg","line","canvasObserver","canvasContainer","handleWheel","interactionSM","mouseHasMoved","clearWindow","transformMatrix","setTransform","deferRedrawOnViewChange","drawGrid","grid","redrawImage","loop","once","getSaveData","setCanvasSize","loadSaveData","clampLinesToDocument","image","complete","img","w","cx","cy","cw","ch","iw","ih","nw","nh","ar","curTime","timeoutGap","loadTimeOffset","style","lineJoin","lineCap","strokeStyle","lineWidth","beginPath","len","midPoint","stroke","inClientSpace","onChange","valuesChanged","getPointerCoordinates","getBrushCoordinates","drawInterface","ctxs","action","save","restore","Image","crossOrigin","onload","src","hideGrid","canvasBounds","floor","setLineDash","gridColor","gridLineWidth","hideGridX","countX","gridSizeX","hideGridY","countY","gridSizeY","hideInterface","arc","fill","catenaryColor","catenary","drawToCanvas","isPressing","zoomExtents","attachViewChangeListener","applyView","componentDidMount","passive","lazyRadius","devicePixelRatio","innerWidth","innerHeight","handleCanvasResize","initX","initY","componentDidUpdate","prevProps","setRadius","render","className","background","backgroundColor","touchAction","container","isInterface","onMouseDown","onMouseMove","onMouseUp","onMouseOut","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","PureComponent"],"mappings":"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","file":"react-canvas-draw.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactCanvasDraw\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactCanvasDraw\"] = factory(root[\"React\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Point2 = require('./Point');\n\nvar _Point3 = _interopRequireDefault(_Point2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar LazyPoint = function (_Point) {\n  _inherits(LazyPoint, _Point);\n\n  function LazyPoint() {\n    _classCallCheck(this, LazyPoint);\n\n    return _possibleConstructorReturn(this, (LazyPoint.__proto__ || Object.getPrototypeOf(LazyPoint)).apply(this, arguments));\n  }\n\n  _createClass(LazyPoint, [{\n    key: 'update',\n\n    /**\n     * Update the x and y values\n     *\n     * @param {Point} point\n     */\n    value: function update(point) {\n      this.x = point.x;\n      this.y = point.y;\n    }\n\n    /**\n     * Move the point to another position using an angle and distance\n     *\n     * @param {number} angle The angle in radians\n     * @param {number} distance How much the point should be moved\n     */\n\n  }, {\n    key: 'moveByAngle',\n    value: function moveByAngle(angle, distance) {\n      // Rotate the angle based on the browser coordinate system ([0,0] in the top left)\n      var angleRotated = angle + Math.PI / 2;\n\n      this.x = this.x + Math.sin(angleRotated) * distance, this.y = this.y - Math.cos(angleRotated) * distance;\n    }\n\n    /**\n     * Check if this point is the same as another point\n     *\n     * @param {Point} point\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'equalsTo',\n    value: function equalsTo(point) {\n      return this.x === point.x && this.y === point.y;\n    }\n\n    /**\n     * Get the difference for x and y axis to another point\n     *\n     * @param {Point} point\n     * @returns {Point}\n     */\n\n  }, {\n    key: 'getDifferenceTo',\n    value: function getDifferenceTo(point) {\n      return new _Point3.default(this.x - point.x, this.y - point.y);\n    }\n\n    /**\n     * Calculate distance to another point\n     *\n     * @param {Point} point\n     * @returns {Point}\n     */\n\n  }, {\n    key: 'getDistanceTo',\n    value: function getDistanceTo(point) {\n      var diff = this.getDifferenceTo(point);\n\n      return Math.sqrt(Math.pow(diff.x, 2) + Math.pow(diff.y, 2));\n    }\n\n    /**\n     * Calculate the angle to another point\n     *\n     * @param {Point} point\n     * @returns {Point}\n     */\n\n  }, {\n    key: 'getAngleTo',\n    value: function getAngleTo(point) {\n      var diff = this.getDifferenceTo(point);\n\n      return Math.atan2(diff.y, diff.x);\n    }\n\n    /**\n     * Return a simple object with x and y properties\n     *\n     * @returns {object}\n     */\n\n  }, {\n    key: 'toObject',\n    value: function toObject() {\n      return {\n        x: this.x,\n        y: this.y\n      };\n    }\n  }]);\n\n  return LazyPoint;\n}(_Point3.default);\n\nexports.default = LazyPoint;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Point =\n/**\n *\n * @param {number} x\n * @param {number} y\n */\nfunction Point(x, y) {\n  _classCallCheck(this, Point);\n\n  this.x = x;\n  this.y = y;\n};\n\nexports.default = Point;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Point = function () {\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   */\n  function Point(x, y) {\n    _classCallCheck(this, Point);\n\n    this.x = x;\n    this.y = y;\n  }\n\n  /**\n   * Update the x and y values\n   *\n   * @param {Point} point\n   */\n\n\n  _createClass(Point, [{\n    key: \"update\",\n    value: function update(point) {\n      this.x = point.x;\n      this.y = point.y;\n    }\n\n    /**\n     * Get the difference for x and y axis to another point\n     *\n     * @param {Point} point\n     * @returns {Point}\n     */\n\n  }, {\n    key: \"getDifferenceTo\",\n    value: function getDifferenceTo(point) {\n      return new Point(this.x - point.x, this.y - point.y);\n    }\n\n    /**\n     * Calculate distance to another point\n     *\n     * @param {Point} point\n     * @returns {Point}\n     */\n\n  }, {\n    key: \"getDistanceTo\",\n    value: function getDistanceTo(point) {\n      var diff = this.getDifferenceTo(point);\n\n      return Math.sqrt(Math.pow(diff.x, 2) + Math.pow(diff.y, 2));\n    }\n  }]);\n\n  return Point;\n}();\n\nexports.default = Point;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LazyPoint = exports.Point = exports.LazyBrush = undefined;\n\nvar _LazyBrush = require('./LazyBrush');\n\nvar _LazyBrush2 = _interopRequireDefault(_LazyBrush);\n\nvar _Point = require('./Point');\n\nvar _Point2 = _interopRequireDefault(_Point);\n\nvar _LazyPoint = require('./LazyPoint');\n\nvar _LazyPoint2 = _interopRequireDefault(_LazyPoint);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.LazyBrush = _LazyBrush2.default;\nexports.Point = _Point2.default;\nexports.LazyPoint = _LazyPoint2.default;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Point = exports.Catenary = undefined;\n\nvar _Catenary = require('./Catenary');\n\nvar _Catenary2 = _interopRequireDefault(_Catenary);\n\nvar _Point = require('./Point');\n\nvar _Point2 = _interopRequireDefault(_Point);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.Catenary = _Catenary2.default;\nexports.Point = _Point2.default;","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _LazyPoint = require('./LazyPoint');\n\nvar _LazyPoint2 = _interopRequireDefault(_LazyPoint);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar RADIUS_DEFAULT = 30;\n\nvar LazyBrush = function () {\n  /**\n   * constructor\n   *\n   * @param {object} settings\n   * @param {number} settings.radius The radius for the lazy area\n   * @param {boolean} settings.enabled\n   */\n  function LazyBrush() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$radius = _ref.radius,\n        radius = _ref$radius === undefined ? RADIUS_DEFAULT : _ref$radius,\n        _ref$enabled = _ref.enabled,\n        enabled = _ref$enabled === undefined ? true : _ref$enabled,\n        _ref$initialPoint = _ref.initialPoint,\n        initialPoint = _ref$initialPoint === undefined ? { x: 0, y: 0 } : _ref$initialPoint;\n\n    _classCallCheck(this, LazyBrush);\n\n    this.radius = radius;\n    this._isEnabled = enabled;\n\n    this.pointer = new _LazyPoint2.default(initialPoint.x, initialPoint.y);\n    this.brush = new _LazyPoint2.default(initialPoint.x, initialPoint.y);\n\n    this.angle = 0;\n    this.distance = 0;\n    this._hasMoved = false;\n  }\n\n  /**\n   * Enable lazy brush calculations.\n   *\n   */\n\n\n  _createClass(LazyBrush, [{\n    key: 'enable',\n    value: function enable() {\n      this._isEnabled = true;\n    }\n\n    /**\n     * Disable lazy brush calculations.\n     *\n     */\n\n  }, {\n    key: 'disable',\n    value: function disable() {\n      this._isEnabled = false;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'isEnabled',\n    value: function isEnabled() {\n      return this._isEnabled;\n    }\n\n    /**\n     * Update the radius\n     *\n     * @param {number} radius\n     */\n\n  }, {\n    key: 'setRadius',\n    value: function setRadius(radius) {\n      this.radius = radius;\n    }\n\n    /**\n     * Return the current radius\n     *\n     * @returns {number}\n     */\n\n  }, {\n    key: 'getRadius',\n    value: function getRadius() {\n      return this.radius;\n    }\n\n    /**\n     * Return the brush coordinates as a simple object\n     *\n     * @returns {object}\n     */\n\n  }, {\n    key: 'getBrushCoordinates',\n    value: function getBrushCoordinates() {\n      return this.brush.toObject();\n    }\n\n    /**\n     * Return the pointer coordinates as a simple object\n     *\n     * @returns {object}\n     */\n\n  }, {\n    key: 'getPointerCoordinates',\n    value: function getPointerCoordinates() {\n      return this.pointer.toObject();\n    }\n\n    /**\n     * Return the brush as a LazyPoint\n     *\n     * @returns {LazyPoint}\n     */\n\n  }, {\n    key: 'getBrush',\n    value: function getBrush() {\n      return this.brush;\n    }\n\n    /**\n     * Return the pointer as a LazyPoint\n     *\n     * @returns {LazyPoint}\n     */\n\n  }, {\n    key: 'getPointer',\n    value: function getPointer() {\n      return this.pointer;\n    }\n\n    /**\n     * Return the angle between pointer and brush\n     *\n     * @returns {number} Angle in radians\n     */\n\n  }, {\n    key: 'getAngle',\n    value: function getAngle() {\n      return this.angle;\n    }\n\n    /**\n     * Return the distance between pointer and brush\n     *\n     * @returns {number} Distance in pixels\n     */\n\n  }, {\n    key: 'getDistance',\n    value: function getDistance() {\n      return this.distance;\n    }\n\n    /**\n     * Return if the previous update has moved the brush.\n     *\n     * @returns {boolean} Whether the brush moved previously.\n     */\n\n  }, {\n    key: 'brushHasMoved',\n    value: function brushHasMoved() {\n      return this._hasMoved;\n    }\n\n    /**\n     * Updates the pointer point and calculates the new brush point.\n     *\n     * @param {Point} newPointerPoint\n     * @param {Object} options\n     * @param {Boolean} options.both Force update pointer and brush\n     * @returns {Boolean} Whether any of the two points changed\n     */\n\n  }, {\n    key: 'update',\n    value: function update(newPointerPoint) {\n      var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref2$both = _ref2.both,\n          both = _ref2$both === undefined ? false : _ref2$both;\n\n      this._hasMoved = false;\n      if (this.pointer.equalsTo(newPointerPoint) && !both) {\n        return false;\n      }\n\n      this.pointer.update(newPointerPoint);\n\n      if (both) {\n        this._hasMoved = true;\n        this.brush.update(newPointerPoint);\n        return true;\n      }\n\n      if (this._isEnabled) {\n        this.distance = this.pointer.getDistanceTo(this.brush);\n        this.angle = this.pointer.getAngleTo(this.brush);\n\n        if (this.distance > this.radius) {\n          this.brush.moveByAngle(this.angle, this.distance - this.radius);\n          this._hasMoved = true;\n        }\n      } else {\n        this.distance = 0;\n        this.angle = 0;\n        this.brush.update(newPointerPoint);\n        this._hasMoved = true;\n      }\n\n      return true;\n    }\n  }]);\n\n  return LazyBrush;\n}();\n\nexports.default = LazyBrush;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\niven two points and a length, calculate and draw the catenary.\nnavaScript implementation:\nopyright (c) 2018 Jan Hug <me@dulnan.net>\neleased under the MIT license.\nnnnriginal ActionScript implementation:\nopyright poiasd ( http://wonderfl.net/user/poiasd )\nicense ( http://www.opensource.org/licenses/mit-license.php )\nownloaded from: http://wonderfl.net/c/8Bnl\nnnnrchived by and downloaded from:\nhttp://wa.zozuar.org/code.php?c=8Bnl\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */\n\n\nvar _Point = require('./Point');\n\nvar _Point2 = _interopRequireDefault(_Point);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar EPSILON = 1e-6;\n\nvar Catenary = function () {\n  /**\n   * constructor\n   *\n   * @param {Object} settings\n   * @param {Number} settings.segments Number of segments of the chain.\n   * @param {Number} settings.iterationLimit Maximum amount iterations for getting catenary parameters.\n   */\n  function Catenary() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$segments = _ref.segments,\n        segments = _ref$segments === undefined ? 50 : _ref$segments,\n        _ref$iterationLimit = _ref.iterationLimit,\n        iterationLimit = _ref$iterationLimit === undefined ? 100 : _ref$iterationLimit;\n\n    _classCallCheck(this, Catenary);\n\n    this.p1 = new _Point2.default();\n    this.p2 = new _Point2.default();\n\n    this.segments = segments;\n    this.iterationLimit = iterationLimit;\n  }\n\n  /**\n   * Draws a catenary given two coordinates, a length and a context.\n   * \n   * @param {CanvasRenderingContext2D} context The canvas context to draw the catenary on to.\n   * @param {Point} p1 First point\n   * @param {Point} p2 Second point\n   * @param {Number} chainLength The length of the catenary\n   */\n\n\n  _createClass(Catenary, [{\n    key: 'drawToCanvas',\n    value: function drawToCanvas(context, point1, point2, chainLength) {\n      this.p1.update(point1);\n      this.p2.update(point2);\n\n      var isFlipped = this.p1.x > this.p2.x;\n\n      var p1 = isFlipped ? this.p2 : this.p1;\n      var p2 = isFlipped ? this.p1 : this.p2;\n\n      var distance = p1.getDistanceTo(p2);\n\n      var curveData = [];\n      var isStraight = true;\n\n      // Prevent \"expensive\" catenary calculations if it would only result\n      // in a straight line.\n      if (distance < chainLength) {\n        var diff = p2.x - p1.x;\n\n        // If the distance on the x axis of both points is too small, don't\n        // calculate a catenary.\n        if (diff > 0.01) {\n          var h = p2.x - p1.x;\n          var v = p2.y - p1.y;\n          var a = -this.getCatenaryParameter(h, v, chainLength, this.iterationLimit);\n          var x = (a * Math.log((chainLength + v) / (chainLength - v)) - h) * 0.5;\n          var y = a * Math.cosh(x / a);\n          var offsetX = p1.x - x;\n          var offsetY = p1.y - y;\n          curveData = this.getCurve(a, p1, p2, offsetX, offsetY, this.segments);\n          isStraight = false;\n        } else {\n          var mx = (p1.x + p2.x) * 0.5;\n          var my = (p1.y + p2.y + chainLength) * 0.5;\n\n          curveData = [[p1.x, p1.y], [mx, my], [p2.x, p2.y]];\n        }\n      } else {\n        curveData = [[p1.x, p1.y], [p2.x, p2.y]];\n      }\n\n      if (isStraight) {\n        this.drawLine(curveData, context);\n      } else {\n        this.drawCurve(curveData, context);\n      }\n\n      return curveData;\n    }\n\n    /**\n     * Determines catenary parameter.\n     * \n     * @param {Number} h Horizontal distance of both points.\n     * @param {Number} v Vertical distance of both points.\n     * @param {Number} length The catenary length.\n     * @param {Number} limit Maximum amount of iterations to find parameter.\n     */\n\n  }, {\n    key: 'getCatenaryParameter',\n    value: function getCatenaryParameter(h, v, length, limit) {\n      var m = Math.sqrt(length * length - v * v) / h;\n      var x = Math.acosh(m) + 1;\n      var prevx = -1;\n      var count = 0;\n\n      while (Math.abs(x - prevx) > EPSILON && count < limit) {\n        prevx = x;\n        x = x - (Math.sinh(x) - m * x) / (Math.cosh(x) - m);\n        count++;\n      }\n\n      return h / (2 * x);\n    }\n\n    /**\n     * Calculate the catenary curve.\n     * Increasing the segments value will produce a catenary closer\n     * to reality, but will require more calcluations.\n     * \n     * @param {Number} a The catenary parameter.\n     * @param {Point} p1 First point\n     * @param {Point} p2 Second point\n     * @param {Number} offsetX The calculated offset on the x axis.\n     * @param {Number} offsetY The calculated offset on the y axis.\n     * @param {Number} segments How many \"parts\" the chain should be made of.\n     */\n\n  }, {\n    key: 'getCurve',\n    value: function getCurve(a, p1, p2, offsetX, offsetY, segments) {\n      var data = [p1.x, a * Math.cosh((p1.x - offsetX) / a) + offsetY];\n\n      var d = p2.x - p1.x;\n      var length = segments - 1;\n\n      for (var i = 0; i < length; i++) {\n        var x = p1.x + d * (i + 0.5) / length;\n        var y = a * Math.cosh((x - offsetX) / a) + offsetY;\n        data.push(x, y);\n      }\n\n      data.push(p2.x, a * Math.cosh((p2.x - offsetX) / a) + offsetY);\n\n      return data;\n    }\n\n    /**\n     * Draws a straight line between two points.\n     *\n     * @param {Array} data Even indices are x, odd are y.\n     * @param {CanvasRenderingContext2D} context The context to draw to.\n     */\n\n  }, {\n    key: 'drawLine',\n    value: function drawLine(data, context) {\n      context.moveTo(data[0][0], data[0][1]);\n\n      context.lineTo(data[1][0], data[1][1]);\n    }\n\n    /**\n     * Draws a quadratic curve between every calculated catenary segment,\n     * so that the segments don't look like straight lines.\n     *\n     * @param {Array} data Even indices are x, odd are y.\n     * @param {CanvasRenderingContext2D} context The context to draw to.\n     * \n     * @returns {Array} The original segment coordinates.\n     */\n\n  }, {\n    key: 'drawCurve',\n    value: function drawCurve(data, context) {\n      var length = data.length * 0.5 - 1;\n      var ox = data[2];\n      var oy = data[3];\n\n      var temp = [];\n\n      context.moveTo(data[0], data[1]);\n\n      for (var i = 2; i < length; i++) {\n        var x = data[i * 2];\n        var y = data[i * 2 + 1];\n        var mx = (x + ox) * 0.5;\n        var my = (y + oy) * 0.5;\n        temp.push([ox, oy, mx, my]);\n        context.quadraticCurveTo(ox, oy, mx, my);\n        ox = x;\n        oy = y;\n      }\n\n      length = data.length;\n      context.quadraticCurveTo(data[length - 4], data[length - 3], data[length - 2], data[length - 1]);\n\n      return temp;\n    }\n  }]);\n\n  return Catenary;\n}();\n\nexports.default = Catenary;","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\n * @type {ViewPoint}\n */\nconst NULL_VIEW_POINT = Object.freeze({\n  x: 0, y: 0, untransformedX: 0, untransformedY: 0\n});\n\n/**\n * @type {CanvasBounds}\n */\nconst NULL_BOUNDS = Object.freeze({\n  canvasWidth: 0, canvasHeight: 0,\n  left: 0, top: 0, right: 0, bottom: 0,\n  viewMin: NULL_VIEW_POINT, viewMax: NULL_VIEW_POINT,\n});\n\n/**\n * The identity matrix (a transform that results in view coordinates that are\n * identical to relative client coordinates).\n * @type {Matrix}\n */\nexport const IDENTITY = Object.freeze({ a: 1, b: 0, c: 0, d: 1, e: 0, f: 0 });\n\nfunction valueOrDefault(value, defaultValue) {\n  if (value === null || (typeof value) === \"undefined\") {\n    return defaultValue;\n  } else {\n    return value;\n  }\n}\n\n/**\n * Facilitates calculation and manipulation of a zoom-and-pannable view within a\n * canvas.\n */\nexport default class CoordinateSystem {\n  /**\n   * @typedef Extents\n   * @property {number} min the minimal value in the range\n   * @property {number} max the maximal value in the range\n   */\n\n  /**\n   * @typedef Size\n   * @property {number} width the span of the element's horizontal axis\n   * @property {number} height the span of the element's vertical axis\n   */\n\n  /**\n   * @param {Object} parameters the initialization parameters for this instance.\n   * @param {Extents} parameters.scaleExtents the minimum and maximum allowable scale factor.\n   * @param {Sizee} parameters.documentSize the width and height of the document, in client space.\n   */\n  constructor({ scaleExtents, documentSize }) {\n    this._scaleExtents = scaleExtents;\n    this._documentSize = documentSize;\n  }\n\n  /**\n   * @type {Extents}\n   */\n  _scaleExtents;\n\n  /**\n   * @type {Size}\n   */\n  _documentSize;\n\n  /**\n   * @typedef Canvas\n   * @property {number} width the canvas's width\n   * @property {number} height the canvas's height\n   * @property {() => Object} getBoundingClientRect returns the client bounds\n   */\n\n  /**\n   * @type {Canvas}\n   * @private\n   */\n  _canvas = null;\n\n  /**\n   * @typedef View\n   * @property {number} scale the zoom factor\n   * @property {number} x the current x offset\n   * @property {number} y the current y offset\n   */\n\n  /**\n   * @type {View}\n   * @private\n   */\n  _view = { scale: 1.0, x: 0, y: 0 };\n\n  /**\n   * Describes a callback function that receives info about view changes\n   * @typedef {(update: { view: View, transform: Matrix }) => void} ViewListener\n   */\n\n   /**\n    * @type {ViewListener[]}\n    * @private\n    */\n   _viewChangeListeners = new Set();\n\n  /**\n   * @returns {Canvas} the canvas currently associated with this instance.\n   */\n  get canvas() {\n    return this._canvas;\n  }\n\n  /**\n   * Updates the canvas for this coordinate system and recalculates the view.\n   * @param {Canvas} canvas the new canvas to associate with this instance.\n   */\n  set canvas(canvas) {\n    this._canvas = canvas;\n    this.setView();\n  }\n\n  /**\n   * @returns {number} the current zoom factor\n   */\n  get scale() {\n    return this._view.scale;\n  }\n\n  /**\n   * Sets the zoom factor (clamped by the scale extents) and updates the view.\n   * @param {number} the new zoom factor\n   */\n  setScale = (scale) => {\n    this.setView({ scale });\n  };\n\n  /**\n   * @returns {number} the horizontal component of the current pan offset\n   */\n  get x() {\n    return this._view.x;\n  }\n\n  /**\n   * Sets the horizontal pan offset (clamped by the document extents) and\n   * updates the view.\n   * @param {number} x the new offset\n   */\n  set x(x) {\n    this.setView({ x });\n  }\n\n  /**\n   * @retruns {number} the vertical component of the current pan offset\n   */\n  get y() {\n    return this._view.y;\n  }\n\n  /**\n   * Sets the vertical pan offset (clamped by the document extents) and\n   * updates the view.\n   * @param {number} y the new offset\n   */\n  set y(y) {\n    this.setView({ y });\n  }\n\n  /**\n   * @returns {View} a copy of this instance's current view state.\n   */\n  get view() {\n    return { ...this._view };\n  }\n\n  /**\n   * @returns {Extents} a copy of the scale extents currently applied to this\n   * instance.\n   */\n  get scaleExtents() {\n    return { ...this._scaleExtents };\n  }\n\n  /**\n   * Updates the minimum and maximum scale and resets the view transform if it\n   * is outside the new extents.\n   * @param {Extents} extents the new scale extents.\n   */\n  set scaleExtents({ min, max }) {\n    this._scaleExtents = { min, max };\n    this.setView();\n  }\n\n  /**\n   * @returns {Size} the current document size (used to constrain the pan\n   * offset).\n   */\n  get documentSize() {\n    return { ...this._documentSize };\n  }\n\n  /**\n   * Sets the document size and recalculates the view if it is outside the new\n   * bounds.\n   * @param {Size} size the new document size.\n   */\n  set documentSize({ width, height }) {\n    this._documentSize = { width, height };\n    this.setView();\n  }\n\n  /**\n   * A view matrix expressing a series of transformations.\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setTransform\n   * @typedef Matrix\n   * @property {number} a horizontal scaling factor (1 == unscaled)\n   * @property {number} b vertical skewing factor (0 == unskewed)\n   * @property {number} c horizontal skewing factor (0 == unskewed)\n   * @property {number} d vertical scaling factor (1 == unscaled)\n   * @property {number} e horizontal translation (0 == untranslated)\n   * @property {number} f vertical translation (0 == untranslated)\n   */\n\n  /**\n   * @returns {Matrix} this coordinate system's current transformation matrix\n   */\n  get transformMatrix() {\n    //\n    return {\n      a: this._view.scale, // horizontal scaling\n      b: 0, // vertical skewing\n      c: 0, // horizontal skewing\n      d: this._view.scale, // vertical scaling\n      e: this._view.x,\n      f: this._view.y,\n    };\n  }\n\n  /**\n   * An object expressing the bounds of a canvas object in terms of the\n   * coordinate system.\n   * @typedef CanvasBounds\n   * @property {number} left the left edge of the canvas in client space\n   * @property {number} right the right edge of the canvas in client space\n   * @property {number} top the top edge of the canvas in client space\n   * @property {number} bottom the bottom edge of the canvas in client space\n   * @property {number} canvasWidth the width of the canvas in client space\n   * @property {number} canvasHeight the height of the canvas in client space\n   * @property {ViewPoint} viewMin the top-left corner of the canvas in view space\n   * @property {ViewPoint} viewMax the bottom-right corner of the canvas in view space\n   */\n\n  /**\n   * @returns {CanvasBounds | undefined} the boundaries of the canvas linked to\n   * this coordinate system, or undefined if no canvas is set.\n   */\n  get canvasBounds() {\n    if (this._canvas) {\n      const { left, top, right, bottom } = this._canvas.getBoundingClientRect();\n      return {\n        viewMin: this.clientPointToViewPoint({ clientX: left, clientY: top }),\n        viewMax: this.clientPointToViewPoint({ clientX: right, clientY: bottom }),\n        left, top, right, bottom,\n        canvasWidth: this._canvas.width,\n        canvasHeight: this._canvas.height,\n      };\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @private\n   * @return {{left: number, top: number} | undefined}\n   */\n  get canvasRect() {\n    if (this.canvas) {\n      return this.canvas.getBoundingClientRect();\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * Calculates a variant of the given view clamped according to the scale and\n   * document bounds. Does not modify this instance.\n   * @param {View} view the view constraints to clamp.\n   * @returns {View} a new view object representing the constrained input.\n   */\n  clampView = ({ scale, x, y }) => {\n    const { min, max } = this.scaleExtents;\n    const { width, height } = this.documentSize;\n    const { left, top, right, bottom } = this.canvasRect || NULL_BOUNDS;\n\n    const canvasWidth = right - left;\n    const canvasHeight = bottom - top;\n\n    const maxx = canvasWidth / 2;\n    const minx = -(width * this._view.scale - canvasWidth / 2);\n    const maxy = canvasHeight / 2;\n    const miny = -(height * this._view.scale - canvasHeight / 2);\n\n    // Clamp values to acceptible range.\n    return {\n      scale: Math.min(Math.max(scale, min), max),\n      x: Math.min(Math.max(x, minx), maxx),\n      y: Math.min(Math.max(y, miny), maxy),\n    };\n  };\n\n  /**\n   * Resets the view transform to its default state.\n   */\n  resetView = () => {\n    this.setView({ scale: 1.0, x: 0, y: 0 });\n  };\n\n  /**\n   * Updates the view, ensuring that it is within the document and scale bounds.\n   * @param {View} view\n   *    the new view state. Any view property not specified will remain\n   *    unchanged.\n   * @return {View}\n   *    a copy of the view state after having been constrained and applied.\n   */\n  setView = (view) => {\n    const newView = this.clampView({ ...this._view, ...(view || {}) });\n    const { scale, x, y } = this._view;\n\n    // Only trigger if the view actually changed.\n    if (newView.scale !== scale || newView.x !== x || newView.y !== y) {\n      this._view = newView;\n      this._viewChangeListeners.forEach(listener => listener && listener(newView));\n    }\n\n    return { ...this._view };\n  };\n\n  /**\n   * Updates the current view scale while attempting to keep the given point\n   * fixed within the canvas.\n   *\n   * @param {number} deltaScale the amount by which to change the current scale factor.\n   * @param {ClientPoint} clientPoint the origin of the zoom, in client space.\n   *\n   * @returns {View} the newly computed view.\n   */\n  scaleAtClientPoint = (deltaScale, clientPoint) => {\n    const viewPt = this.clientPointToViewPoint(clientPoint);\n    const newView = this.clampView({ ...this._view, scale: this._view.scale + deltaScale });\n    const clientPtPostScale = this.viewPointToClientPoint(viewPt, newView);\n\n    newView.x = this._view.x - (clientPtPostScale.clientX - clientPoint.clientX);\n    newView.y = this._view.y - (clientPtPostScale.clientY - clientPoint.clientY);\n\n    return this.setView(newView);\n  };\n\n  /**\n   * Describes a point in view space (client space after the viewport transform\n   * has been applied).\n   * @typedef ViewPoint\n   * @property {number} x\n   *    the x-coordinate in view space\n   * @property {number} y\n   *    the y-coordinate in view space\n   * @property {number} relativeClientX\n   *    the x-coordinate of the point in client space, relative to the top-left\n   *    corner of the canvas\n   * @property {number} relativeClientY\n   *    the y-coordinate of the point in client space, relative to the top-left\n   *    corner of the canvas\n   */\n\n  /**\n   * @param {ClientPoint} point the point to transform in client space\n   * @param {View} view the view transform to apply (defaults to the current view)\n   * @returns {ViewPoint} the result of converting the given client coordinate\n   * to view space. If there is no canvas set, a top-left corner of (0, 0) is\n   * assumed.\n   */\n  clientPointToViewPoint = ({ clientX, clientY }, view = this._view) => {\n    const { left, top } = this.canvasRect || NULL_BOUNDS;\n    const relativeClientX = clientX - left;\n    const relativeClientY = clientY - top;\n\n    return {\n      x: (relativeClientX - view.x) / view.scale,\n      y: (relativeClientY - view.y) / view.scale,\n      relativeClientX,\n      relativeClientY,\n    };\n  };\n\n  /**\n   * @typedef ClientPoint\n   * @property {number} clientX\n   *    the x-coordinate in client space\n   * @property {number} clientY\n   *    the y-coordinate in client space\n   * @property {number} x\n   *    an alias for clientX\n   * @property {number} y\n   *    an alias for clientY\n   * @property {number} relativeX\n   *    the x-coordinate in client space, relative to the top-left corner of the\n   *    canvas\n   * @property {number} relativeY\n   *    the y-coordinate in client space, relative to the top-left corner of the\n   *    canvas\n   */\n\n   /**\n    * @param {ViewPoint} point the point to transform in view space\n    * @param {number} point.x the point's x-coordinate\n    * @param {number} point.y the point's y-coordinate\n    * @param {View} view the view transform to apply (defaults to the current view)\n    * @returns {ClientPoint} the result of converting the given coordinate to\n    * client space. If there is no canvas set, a top-left corner of (0, 0) is\n    * assumed.\n    */\n  viewPointToClientPoint = ({ x, y }, view = this._view) => {\n    const { left, top } = this.canvasRect || NULL_BOUNDS;\n    const relativeX = x * view.scale + view.x;\n    const relativeY = y * view.scale + view.y;\n    const clientX = relativeX + left;\n    const clientY = relativeY + top;\n\n    return { clientX, clientY, relativeX, relativeY, x: clientX, y: clientY };\n  };\n\n  /**\n   * Adds a new callback function that will be invoked each time the view\n   * transform changes.\n   * @param {ViewListener} listener the callback to execute.\n   */\n  attachViewChangeListener = (listener) => {\n    this._viewChangeListeners.add(listener);\n  };\n}\n","const TOUCH_SLOP = 10;\nconst PINCH_TIMEOUT_MS = 250;\nconst SUPPRESS_SCROLL = (e) => {\n  // No zooming while drawing, but we'll cancel the scroll event.\n  e.preventDefault();\n  return this;\n};\n\n/**\n * The default state for the interaction state machine. Supports zoom and\n * initiating pan and drawing actions.\n */\nexport class DefaultState {\n  handleMouseWheel = (e, canvasDraw) => {\n    const { disabled, enablePanAndZoom, mouseZoomFactor } = canvasDraw.props;\n    if (disabled ) {\n      return new DisabledState();\n    } else if (enablePanAndZoom && e.ctrlKey) {\n      e.preventDefault();\n      canvasDraw.coordSystem.scaleAtClientPoint(mouseZoomFactor * e.deltaY, clientPointFromEvent(e));\n    }\n    return this;\n  };\n\n  handleDrawStart = (e, canvasDraw) => {\n    if (canvasDraw.props.disabled) {\n      return new DisabledState();\n    } else if (e.ctrlKey && canvasDraw.props.enablePanAndZoom) {\n      return (new PanState()).handleDrawStart(e, canvasDraw);\n    } else {\n      return (new WaitForPinchState()).handleDrawStart(e, canvasDraw);\n    }\n  };\n\n  handleDrawMove = (e, canvasDraw) => {\n    if (canvasDraw.props.disabled) {\n      return new DisabledState();\n    } else {\n      const { x, y } = viewPointFromEvent(canvasDraw.coordSystem, e);\n      canvasDraw.lazy.update({ x, y });\n      return this;\n    }\n  };\n\n  handleDrawEnd = (e, canvasDraw) => {\n    return canvasDraw.props.disabled ? (new DisabledState()) : this;\n  };\n};\n\n/**\n * This state is used as long as the disabled prop is active. It ignores all\n * events and doesn't prevent default actions. The disabled state can only be\n * triggered from the default state (i.e., while no action is actively being\n * performed).\n */\nexport class DisabledState {\n  handleMouseWheel = (e, canvasDraw) => {\n    if (canvasDraw.props.disabled) {\n      return this;\n    } else {\n      return (new DefaultState()).handleMouseWheel(e, canvasDraw);\n    }\n  };\n\n  handleDrawStart = (e, canvasDraw) => {\n    if (canvasDraw.props.disabled) {\n      return this;\n    } else {\n      return (new DefaultState()).handleDrawStart(e, canvasDraw);\n    }\n  };\n\n  handleDrawMove = (e, canvasDraw) => {\n    if (canvasDraw.props.disabled) {\n      return this;\n    } else {\n      return (new DefaultState()).handleDrawMove(e, canvasDraw);\n    }\n  };\n\n  handleDrawEnd = (e, canvasDraw) => {\n    if (canvasDraw.props.disabled) {\n      return this;\n    } else {\n      return (new DefaultState()).handleDrawEnd(e, canvasDraw);\n    }\n  }\n}\n\n/**\n * This state is active as long as the user is panning the image. This state is\n * retained until the pan ceases.\n */\nexport class PanState {\n  handleMouseWheel = SUPPRESS_SCROLL.bind(this);\n\n  handleDrawStart = (e, canvasDraw) => {\n    e.preventDefault();\n\n    this.dragStart = clientPointFromEvent(e);\n    this.panStart = { x: canvasDraw.coordSystem.x, y: canvasDraw.coordSystem.y };\n\n    return this;\n  };\n\n  handleDrawMove = (e, canvasDraw) => {\n    e.preventDefault();\n\n    const { clientX, clientY } = clientPointFromEvent(e);\n    const dx = clientX - this.dragStart.clientX;\n    const dy = clientY - this.dragStart.clientY;\n    canvasDraw.coordSystem.setView({ x: this.panStart.x + dx, y: this.panStart.y + dy });\n\n    return this;\n  };\n\n  handleDrawEnd = () => new DefaultState();\n}\n\n/**\n * This state is active when the user has initiated the drawing action but has\n * not yet created any lines. We use this state to try and detect a second touch\n * event to initiate a pinch-zoom action. We'll give up on that if enough time\n * or movement happens without a second touch.\n */\nexport class WaitForPinchState {\n  constructor() {\n    this.startClientPoint = null;\n    this.startTimestamp = (new Date()).valueOf();\n    this.deferredPoints = [];\n  }\n\n  handleMouseWheel = SUPPRESS_SCROLL.bind(this);\n\n  handleDrawStart  = (e, canvasDraw) => {\n    const { enablePanAndZoom } = canvasDraw.props;\n    e.preventDefault();\n\n    // We're going to transition immediately into lazy-drawing mode if\n    // pan-and-zoom isn't enabled or if this event wasn't triggered by a touch.\n    if (!e.touches || !e.touches.length || !enablePanAndZoom) {\n      return (new DrawingState()).handleDrawStart(e, canvasDraw);\n    }\n\n    // If we already have two touch events, we can move straight into pinch/pan\n    if (enablePanAndZoom && e.touches && e.touches.length >= 2) {\n      return (new ScaleOrPanState()).handleDrawStart(e, canvasDraw);\n    }\n\n    return this.handleDrawMove(e, canvasDraw);\n  };\n\n  handleDrawMove = (e, canvasDraw) => {\n    e.preventDefault();\n\n    // If we have two touches, move to pinch/pan (we don't have to recheck\n    // whether zoom is enabled because that happend in draw start).\n    if (e.touches && e.touches.length >= 2) {\n      // Use the start draw to handler to transition.\n      return (new ScaleOrPanState()).handleDrawStart(e, canvasDraw);\n    }\n\n    const clientPt = clientPointFromEvent(e);\n    this.deferredPoints.push(clientPt);\n\n    // If we've already moved far enough, or if enough time has passed, give up\n    // and switch over to drawing.\n    if ((new Date()).valueOf() - this.startTimestamp < PINCH_TIMEOUT_MS) {\n      if (this.startClientPoint === null) {\n        this.startClientPoint = clientPt;\n      }\n\n      // Note that we're using \"manhattan distance\" rather than computing a\n      // hypotenuse here as a cheap approximation\n      const d =\n        Math.abs(clientPt.clientX - this.startClientPoint.clientX)\n        + Math.abs(clientPt.clientY - this.startClientPoint.clientY);\n\n      if (d < TOUCH_SLOP) {\n        // We're not ready to give up yet.\n        return this;\n      }\n    }\n\n    // Okay, give up and start drawing.\n    return this.issueDeferredPoints(canvasDraw);\n  };\n\n  handleDrawEnd = (e, canvasDraw) => {\n    // The user stopped drawing before we decided what to do. Just treat this as\n    // if they were drawing all along.\n    return this.issueDeferredPoints(canvasDraw).handleDrawEnd(e, canvasDraw);\n  };\n\n  issueDeferredPoints = (canvasDraw) => {\n    // Time to give up. Play our deferred points out to the drawing state.\n    // The first point will have been a start draw.\n    let nextState = new DrawingState();\n    for (let i = 0; i < this.deferredPoints.length; i++) {\n      const deferredPt = this.deferredPoints[i];\n      const syntheticEvt = new SyntheticEvent(deferredPt);\n      const func = i === 0 ? nextState.handleDrawStart : nextState.handleDrawMove;\n      nextState = func(syntheticEvt, canvasDraw);\n    }\n    return nextState;\n  };\n}\n\n/**\n * This state is active when the user has added at least two touch points but we\n * don't yet know if they intend to pan or zoom.\n */\nexport class ScaleOrPanState {\n  handleMouseWheel = SUPPRESS_SCROLL.bind(this);\n\n  handleDrawStart = (e, canvasDraw) => {\n    e.preventDefault();\n    if (!e.touches || e.touches.length < 2) {\n      return new DefaultState();\n    }\n    this.start = this.getTouchMetrics(e);\n    this.panStart = { x: canvasDraw.coordSystem.x, y: canvasDraw.coordSystem.y };\n    this.scaleStart = canvasDraw.coordSystem.scale;\n    return this;\n  };\n\n  handleDrawMove = (e, canvasDraw) => {\n    e.preventDefault();\n    if (!e.touches || e.touches.length < 2) {\n      return new DefaultState();\n    }\n\n    const { centroid, distance } = this.recentMetrics = this.getTouchMetrics(e);\n\n    // Switch to scaling?\n    const dd = Math.abs(distance - this.start.distance);\n    if (dd >= TOUCH_SLOP) {\n      return new TouchScaleState(this).handleDrawMove(e, canvasDraw);\n    }\n\n    // Switch to panning?\n    const dx = centroid.clientX - this.start.centroid.clientX;\n    const dy = centroid.clientY - this.start.centroid.clientY;\n    const dc = Math.abs(dx) + Math.abs(dy);\n    if (dc >= TOUCH_SLOP) {\n      return new TouchPanState(this).handleDrawMove(e, canvasDraw);\n    }\n\n    // Not enough movement yet\n    return this;\n  };\n\n  handleDrawEnd = () => new DefaultState();\n\n  getTouchMetrics = (e) => {\n    const { clientX: t1x, clientY: t1y } = clientPointFromEvent(e.touches[0]);\n    const { clientX: t2x, clientY: t2y } = clientPointFromEvent(e.touches[1]);\n\n    const dx = t2x - t1x;\n    const dy = t2y - t1y;\n\n    return {\n      t1: { clientX: t1x, clientY: t1y },\n      t2: { clientX: t2x, clientY: t2y },\n      distance: Math.sqrt(dx * dx + dy * dy),\n      centroid: { clientX: (t1x + t2x) / 2.0, clientY: (t1y + t2y) / 2.0 },\n    };\n  };\n}\n\n/**\n * The user is actively using touch gestures to pan the image.\n */\nexport class TouchPanState {\n  constructor(scaleOrPanState) {\n    this.scaleOrPanState = scaleOrPanState;\n  }\n\n  handleMouseWheel = SUPPRESS_SCROLL.bind(this);\n  handleDrawStart = () => this;\n\n  handleDrawMove = (e, canvasDraw) => {\n    e.preventDefault();\n    if (!e.touches || e.touches.length < 2) {\n      return new DefaultState();\n    }\n\n    const ref = this.scaleOrPanState;\n    const { centroid, distance } = ref.recentMetrics = ref.getTouchMetrics(e);\n\n    const dx = centroid.clientX - ref.start.centroid.clientX;\n    const dy = centroid.clientY - ref.start.centroid.clientY;\n\n    canvasDraw.setView({ x: ref.panStart.x + dx, y: ref.panStart.y + dy });\n\n    return this;\n  };\n\n  handleDrawEnd = () => new DefaultState();\n}\n\n/**\n * The user is actively using touch gestures to scale the drawing.\n */\nexport class TouchScaleState {\n  constructor(scaleOrPanState) {\n    this.scaleOrPanState = scaleOrPanState;\n  }\n\n  handleMouseWheel = SUPPRESS_SCROLL.bind(this);\n  handleDrawStart = () => this;\n\n  handleDrawMove = (e, canvasDraw) => {\n    e.preventDefault();\n    if (!e.touches || e.touches.length < 2) {\n      return new DefaultState();\n    }\n\n    const ref = this.scaleOrPanState;\n    const { centroid, distance } = ref.recentMetrics = ref.getTouchMetrics(e);\n\n    const targetScale = ref.scaleStart * (distance / ref.start.distance);\n    const dScale = targetScale - canvasDraw.coordSystem.scale;\n    canvasDraw.coordSystem.scaleAtClientPoint(dScale, centroid);\n\n    return this;\n  };\n\n  handleDrawEnd = () => new DefaultState();\n}\n\n/**\n * This state is active when the user is drawing.\n */\nexport class DrawingState {\n  constructor() {\n    this.isDrawing = false;\n  }\n\n  handleMouseWheel = SUPPRESS_SCROLL.bind(this);\n\n  handleDrawStart = (e, canvasDraw) => {\n    e.preventDefault();\n\n    if (e.touches && e.touches.length) {\n      // on touch, set catenary position to touch pos\n      const { x, y } = viewPointFromEvent(canvasDraw.coordSystem, e);\n      canvasDraw.lazy.update({ x, y }, { both: true });\n    }\n\n    return this.handleDrawMove(e, canvasDraw);\n  };\n\n  handleDrawMove = (e, canvasDraw) => {\n    e.preventDefault();\n\n    const { x, y } = viewPointFromEvent(canvasDraw.coordSystem, e);\n    canvasDraw.lazy.update({ x, y });\n    const isDisabled = !canvasDraw.lazy.isEnabled();\n\n    if (!this.isDrawing || isDisabled) {\n      // Start drawing and add point\n      canvasDraw.points.push(canvasDraw.clampPointToDocument(canvasDraw.lazy.brush.toObject()));\n      this.isDrawing = true;\n    }\n\n    // Add new point\n    canvasDraw.points.push(canvasDraw.clampPointToDocument(canvasDraw.lazy.brush.toObject()));\n\n    // Draw current points\n    canvasDraw.drawPoints({\n      points: canvasDraw.points,\n      brushColor: canvasDraw.props.brushColor,\n      brushRadius: canvasDraw.props.brushRadius\n    });\n\n    return this;\n  };\n\n  handleDrawEnd = (e, canvasDraw) => {\n    e.preventDefault();\n\n    // Draw to this end pos\n    this.handleDrawMove(e, canvasDraw);\n    canvasDraw.saveLine();\n\n    return new DefaultState();\n  };\n}\n\nexport class SyntheticEvent {\n  constructor({ clientX, clientY }) {\n    this.clientX = clientX;\n    this.clientY = clientY;\n    this.touches = [ { clientX, clientY } ];\n  }\n\n  preventDefault = () => {};\n}\n\nexport function clientPointFromEvent(e) {\n  // use cursor pos as default\n  let clientX = e.clientX;\n  let clientY = e.clientY;\n\n  // use first touch if available\n  if (e.changedTouches && e.changedTouches.length > 0) {\n    clientX = e.changedTouches[0].clientX;\n    clientY = e.changedTouches[0].clientY;\n  }\n\n  return { clientX, clientY };\n}\n\nexport function viewPointFromEvent(coordSystem, e) {\n  return coordSystem.clientPointToViewPoint(clientPointFromEvent(e));\n}\n","// Determines if the browser supprots passive events\n// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\nlet passiveSupported = false;\ntry {\n  const options = {\n    get passive() {\n      passiveSupported = true;\n      return false;\n    }\n  };\n  window.addEventListener(\"test\", options, options);\n  window.removeEventListener(\"test\", options, options);\n} catch(e) {\n  passiveSupported = false;\n}\n\nexport default function makePassiveEventOption(passive) {\n  return passiveSupported ? { passive } : passive;\n}\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { LazyBrush } from \"lazy-brush\";\nimport { Catenary } from \"catenary-curve\";\n\nimport ResizeObserver from \"resize-observer-polyfill\";\n\nimport CoordinateSystem, { IDENTITY } from \"./coordinateSystem\";\nimport drawImage from \"./drawImage\";\nimport { DefaultState } from \"./interactionStateMachine\";\nimport makePassiveEventOption from \"./makePassiveEventOption\";\n\nfunction midPointBtw(p1, p2) {\n  return {\n    x: p1.x + (p2.x - p1.x) / 2,\n    y: p1.y + (p2.y - p1.y) / 2,\n  };\n}\n\nconst canvasStyle = {\n  display: \"block\",\n  position: \"absolute\",\n};\n\n// The order of these is important: grid > drawing > temp > interface\nconst canvasTypes = [\"grid\", \"drawing\", \"temp\", \"interface\"];\n\nconst dimensionsPropTypes = PropTypes.oneOfType([\n  PropTypes.number,\n  PropTypes.string,\n]);\n\nconst boundsProp = PropTypes.shape({\n  min: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired,\n});\n\nexport default class CanvasDraw extends PureComponent {\n  static propTypes = {\n    onChange: PropTypes.func,\n    loadTimeOffset: PropTypes.number,\n    lazyRadius: PropTypes.number,\n    brushRadius: PropTypes.number,\n    brushColor: PropTypes.string,\n    catenaryColor: PropTypes.string,\n    gridColor: PropTypes.string,\n    backgroundColor: PropTypes.string,\n    hideGrid: PropTypes.bool,\n    canvasWidth: dimensionsPropTypes,\n    canvasHeight: dimensionsPropTypes,\n    disabled: PropTypes.bool,\n    imgSrc: PropTypes.string,\n    saveData: PropTypes.string,\n    immediateLoading: PropTypes.bool,\n    hideInterface: PropTypes.bool,\n    gridSizeX: PropTypes.number,\n    gridSizeY: PropTypes.number,\n    gridLineWidth: PropTypes.number,\n    hideGridX: PropTypes.bool,\n    hideGridY: PropTypes.bool,\n    enablePanAndZoom: PropTypes.bool,\n    mouseZoomFactor: PropTypes.number,\n    zoomExtents: boundsProp,\n    clampLinesToDocument: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    onChange: null,\n    loadTimeOffset: 5,\n    lazyRadius: 12,\n    brushRadius: 10,\n    brushColor: \"#444\",\n    catenaryColor: \"#0a0302\",\n    gridColor: \"rgba(150,150,150,0.17)\",\n    backgroundColor: \"#FFF\",\n    hideGrid: false,\n    canvasWidth: 400,\n    canvasHeight: 400,\n    disabled: false,\n    imgSrc: \"\",\n    saveData: \"\",\n    immediateLoading: false,\n    hideInterface: false,\n    gridSizeX: 25,\n    gridSizeY: 25,\n    gridLineWidth: 0.5,\n    hideGridX: false,\n    hideGridY: false,\n    enablePanAndZoom: false,\n    mouseZoomFactor: 0.01,\n    zoomExtents: { min: 0.33, max: 3 },\n    clampLinesToDocument: false,\n  };\n\n  ///// public API /////////////////////////////////////////////////////////////\n\n  constructor(props) {\n    super(props);\n\n    this.canvas = {};\n    this.ctx = {};\n\n    this.catenary = new Catenary();\n\n    this.points = [];\n    this.lines = [];\n    this.erasedLines = [];\n\n    this.mouseHasMoved = true;\n    this.valuesChanged = true;\n    this.isDrawing = false;\n    this.isPressing = false;\n    this.deferRedrawOnViewChange = false;\n\n    this.interactionSM = new DefaultState();\n    this.coordSystem = new CoordinateSystem({\n      scaleExtents: props.zoomExtents,\n      documentSize: { width: props.canvasWidth, height: props.canvasHeight },\n    });\n    this.coordSystem.attachViewChangeListener(this.applyView.bind(this));\n  }\n\n  undo = () => {\n    let lines = [];\n    if (this.lines.length) {\n      lines = this.lines.slice(0, -1);\n    } else if (this.erasedLines.length) {\n      lines = this.erasedLines.pop();\n    }\n    this.clearExceptErasedLines();\n    this.simulateDrawingLines({ lines, immediate: true });\n    this.triggerOnChange();\n  };\n\n  eraseAll = () => {\n    this.erasedLines.push([...this.lines]);\n    this.clearExceptErasedLines();\n    this.triggerOnChange();\n  };\n\n  clear = () => {\n    this.erasedLines = [];\n    this.clearExceptErasedLines();\n    this.resetView();\n  };\n\n  resetView = () => {\n    return this.coordSystem.resetView();\n  };\n\n  setView = (view) => {\n    return this.coordSystem.setView(view);\n  };\n\n  getSaveData = () => {\n    // Construct and return the stringified saveData object\n    return JSON.stringify({\n      lines: this.lines,\n      width: this.props.canvasWidth,\n      height: this.props.canvasHeight,\n    });\n  };\n\n  /**\n   * Combination of work by Ernie Arrowsmith and emizz\n   * References:\n   * https://stackoverflow.com/questions/32160098/change-html-canvas-black-background-to-white-background-when-creating-jpg-image\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toDataURL\n\n   * This function will export the canvas to a data URL, which can subsequently be used to share or manipulate the image file.\n   * @param {string} fileType Specifies the file format to export to. Note: should only be the file type, not the \"image/\" prefix.\n   *  For supported types see https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toDataURL\n   * @param {bool} useBgImage Specifies whether the canvas' current background image should also be exported. Default is false.\n   * @param {string} backgroundColour The desired background colour hex code, e.g. \"#ffffff\" for white.\n   */\n  getDataURL = (fileType, useBgImage, backgroundColour) => {\n    // Get a reference to the \"drawing\" layer of the canvas\n    let canvasToExport = this.canvas.drawing;\n\n    let context = canvasToExport.getContext(\"2d\");\n\n    //cache height and width\n    let width = canvasToExport.width;\n    let height = canvasToExport.height;\n\n    //get the current ImageData for the canvas\n    let storedImageData = context.getImageData(0, 0, width, height);\n\n    //store the current globalCompositeOperation\n    var compositeOperation = context.globalCompositeOperation;\n\n    //set to draw behind current content\n    context.globalCompositeOperation = \"destination-over\";\n\n    // If \"useBgImage\" has been set to true, this takes precedence over the background colour parameter\n    if (useBgImage) {\n      if (!this.props.imgSrc) return \"Background image source not set\";\n\n      // Write the background image\n      this.drawImage();\n    } else if (backgroundColour != null) {\n      //set background color\n      context.fillStyle = backgroundColour;\n\n      //fill entire canvas with background colour\n      context.fillRect(0, 0, width, height);\n    }\n\n    // If the file type has not been specified, default to PNG\n    if (!fileType) fileType = \"png\";\n\n    // Export the canvas to data URL\n    let imageData = canvasToExport.toDataURL(`image/${fileType}`);\n\n    //clear the canvas\n    context.clearRect(0, 0, width, height);\n\n    //restore it with original / cached ImageData\n    context.putImageData(storedImageData, 0, 0);\n\n    //reset the globalCompositeOperation to what it was\n    context.globalCompositeOperation = compositeOperation;\n\n    return imageData;\n  };\n\n  loadSaveData = (saveData, immediate = this.props.immediateLoading) => {\n    if (typeof saveData !== \"string\") {\n      throw new Error(\"saveData needs to be of type string!\");\n    }\n\n    const { lines, width, height } = JSON.parse(saveData);\n\n    if (!lines || typeof lines.push !== \"function\") {\n      throw new Error(\"saveData.lines needs to be an array!\");\n    }\n\n    this.clear();\n\n    if (\n      width === this.props.canvasWidth &&\n      height === this.props.canvasHeight\n    ) {\n      this.simulateDrawingLines({\n        lines,\n        immediate,\n      });\n    } else {\n      // we need to rescale the lines based on saved & current dimensions\n      const scaleX = this.props.canvasWidth / width;\n      const scaleY = this.props.canvasHeight / height;\n      const scaleAvg = (scaleX + scaleY) / 2;\n\n      this.simulateDrawingLines({\n        lines: lines.map((line) => ({\n          ...line,\n          points: line.points.map((p) => ({\n            x: p.x * scaleX,\n            y: p.y * scaleY,\n          })),\n          brushRadius: line.brushRadius * scaleAvg,\n        })),\n        immediate,\n      });\n    }\n  };\n\n  ///// private API ////////////////////////////////////////////////////////////\n\n  ///// React Lifecycle\n\n  componentDidMount() {\n    this.lazy = new LazyBrush({\n      radius: this.props.lazyRadius * window.devicePixelRatio,\n      enabled: true,\n      initialPoint: {\n        x: window.innerWidth / 2,\n        y: window.innerHeight / 2,\n      },\n    });\n    this.chainLength = this.props.lazyRadius * window.devicePixelRatio;\n\n    this.canvasObserver = new ResizeObserver((entries, observer) =>\n      this.handleCanvasResize(entries, observer)\n    );\n    this.canvasObserver.observe(this.canvasContainer);\n\n    this.drawImage();\n    this.loop();\n\n    window.setTimeout(() => {\n      const initX = window.innerWidth / 2;\n      const initY = window.innerHeight / 2;\n      this.lazy.update(\n        { x: initX - this.chainLength / 4, y: initY },\n        { both: true }\n      );\n      this.lazy.update(\n        { x: initX + this.chainLength / 4, y: initY },\n        { both: false }\n      );\n      this.mouseHasMoved = true;\n      this.valuesChanged = true;\n      this.clearExceptErasedLines();\n\n      // Load saveData from prop if it exists\n      if (this.props.saveData) {\n        this.loadSaveData(this.props.saveData);\n      }\n    }, 100);\n\n    // Attach our wheel event listener here instead of in the render so that we can specify a non-passive listener.\n    // This is necessary to prevent the default event action on chrome.\n    // https://github.com/facebook/react/issues/14856\n    this.canvas.interface &&\n      this.canvas.interface.addEventListener(\n        \"wheel\",\n        this.handleWheel,\n        makePassiveEventOption()\n      );\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.lazyRadius !== this.props.lazyRadius) {\n      // Set new lazyRadius values\n      this.chainLength = this.props.lazyRadius * window.devicePixelRatio;\n      this.lazy.setRadius(this.props.lazyRadius * window.devicePixelRatio);\n    }\n\n    if (prevProps.saveData !== this.props.saveData) {\n      this.loadSaveData(this.props.saveData);\n    }\n\n    if (JSON.stringify(prevProps) !== JSON.stringify(this.props)) {\n      // Signal this.loop function that values changed\n      this.valuesChanged = true;\n    }\n\n    this.coordSystem.scaleExtents = this.props.zoomExtents;\n    if (!this.props.enablePanAndZoom) {\n      this.coordSystem.resetView();\n    }\n\n    if (prevProps.imgSrc !== this.props.imgSrc) {\n      this.drawImage();\n    }\n  }\n\n  componentWillUnmount = () => {\n    this.canvasObserver.unobserve(this.canvasContainer);\n    this.canvas.interface &&\n      this.canvas.interface.removeEventListener(\"wheel\", this.handleWheel);\n  };\n\n  render() {\n    return (\n      <div\n        className={this.props.className}\n        style={{\n          display: \"block\",\n          background: this.props.backgroundColor,\n          touchAction: \"none\",\n          width: this.props.canvasWidth,\n          height: this.props.canvasHeight,\n          ...this.props.style,\n        }}\n        ref={(container) => {\n          if (container) {\n            this.canvasContainer = container;\n          }\n        }}\n      >\n        {canvasTypes.map((name) => {\n          const isInterface = name === \"interface\";\n          return (\n            <canvas\n              key={name}\n              ref={(canvas) => {\n                if (canvas) {\n                  this.canvas[name] = canvas;\n                  this.ctx[name] = canvas.getContext(\"2d\");\n                  if (isInterface) {\n                    this.coordSystem.canvas = canvas;\n                  }\n                }\n              }}\n              style={{ ...canvasStyle }}\n              onMouseDown={isInterface ? this.handleDrawStart : undefined}\n              onMouseMove={isInterface ? this.handleDrawMove : undefined}\n              onMouseUp={isInterface ? this.handleDrawEnd : undefined}\n              onMouseOut={isInterface ? this.handleDrawEnd : undefined}\n              onTouchStart={isInterface ? this.handleDrawStart : undefined}\n              onTouchMove={isInterface ? this.handleDrawMove : undefined}\n              onTouchEnd={isInterface ? this.handleDrawEnd : undefined}\n              onTouchCancel={isInterface ? this.handleDrawEnd : undefined}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  ///// Event Handlers\n\n  handleWheel = (e) => {\n    this.interactionSM = this.interactionSM.handleMouseWheel(e, this);\n  };\n\n  handleDrawStart = (e) => {\n    this.interactionSM = this.interactionSM.handleDrawStart(e, this);\n    this.mouseHasMoved = true;\n  };\n\n  handleDrawMove = (e) => {\n    this.interactionSM = this.interactionSM.handleDrawMove(e, this);\n    this.mouseHasMoved = true;\n  };\n\n  handleDrawEnd = (e) => {\n    this.interactionSM = this.interactionSM.handleDrawEnd(e, this);\n    this.mouseHasMoved = true;\n  };\n\n  applyView = () => {\n    if (!this.ctx.drawing) {\n      return;\n    }\n\n    canvasTypes\n      .map((name) => this.ctx[name])\n      .forEach((ctx) => {\n        this.clearWindow(ctx);\n        const m = this.coordSystem.transformMatrix;\n        ctx.setTransform(m.a, m.b, m.c, m.d, m.e, m.f);\n      });\n\n    if (!this.deferRedrawOnViewChange) {\n      this.drawGrid(this.ctx.grid);\n      this.redrawImage();\n      this.loop({ once: true });\n\n      const lines = this.lines;\n      this.lines = [];\n      this.simulateDrawingLines({ lines, immediate: true });\n    }\n  };\n\n  handleCanvasResize = (entries) => {\n    const saveData = this.getSaveData();\n    this.deferRedrawOnViewChange = true;\n    try {\n      for (const entry of entries) {\n        const { width, height } = entry.contentRect;\n        this.setCanvasSize(this.canvas.interface, width, height);\n        this.setCanvasSize(this.canvas.drawing, width, height);\n        this.setCanvasSize(this.canvas.temp, width, height);\n        this.setCanvasSize(this.canvas.grid, width, height);\n\n        this.coordSystem.documentSize = { width, height };\n        this.drawGrid(this.ctx.grid);\n        this.drawImage();\n        this.loop({ once: true });\n      }\n      this.loadSaveData(saveData, true);\n    } finally {\n      this.deferRedrawOnViewChange = false;\n    }\n  };\n\n  ///// Helpers\n\n  clampPointToDocument = (point) => {\n    if (this.props.clampLinesToDocument) {\n      return {\n        x: Math.max(Math.min(point.x, this.props.canvasWidth), 0),\n        y: Math.max(Math.min(point.y, this.props.canvasHeight), 0),\n      };\n    } else {\n      return point;\n    }\n  };\n\n  redrawImage = () => {\n    this.image &&\n      this.image.complete &&\n      drawImage({ ctx: this.ctx.grid, img: this.image });\n  };\n\n  simulateDrawingLines = ({ lines, immediate }) => {\n    // Simulate live-drawing of the loaded lines\n    // TODO use a generator\n    let curTime = 0;\n    let timeoutGap = immediate ? 0 : this.props.loadTimeOffset;\n\n    lines.forEach((line) => {\n      const { points, brushColor, brushRadius } = line;\n\n      // Draw all at once if immediate flag is set, instead of using setTimeout\n      if (immediate) {\n        // Draw the points\n        this.drawPoints({\n          points,\n          brushColor,\n          brushRadius,\n        });\n\n        // Save line with the drawn points\n        this.points = points;\n        this.saveLine({ brushColor, brushRadius });\n        return;\n      }\n\n      // Use timeout to draw\n      for (let i = 1; i < points.length; i++) {\n        curTime += timeoutGap;\n        window.setTimeout(() => {\n          this.drawPoints({\n            points: points.slice(0, i + 1),\n            brushColor,\n            brushRadius,\n          });\n        }, curTime);\n      }\n\n      curTime += timeoutGap;\n      window.setTimeout(() => {\n        // Save this line with its props instead of this.props\n        this.points = points;\n        this.saveLine({ brushColor, brushRadius });\n      }, curTime);\n    });\n  };\n\n  setCanvasSize = (canvas, width, height) => {\n    canvas.width = width;\n    canvas.height = height;\n    canvas.style.width = width;\n    canvas.style.height = height;\n  };\n\n  drawPoints = ({ points, brushColor, brushRadius }) => {\n    this.ctx.temp.lineJoin = \"round\";\n    this.ctx.temp.lineCap = \"round\";\n    this.ctx.temp.strokeStyle = brushColor;\n\n    this.clearWindow(this.ctx.temp);\n    this.ctx.temp.lineWidth = brushRadius * 2;\n\n    let p1 = points[0];\n    let p2 = points[1];\n\n    this.ctx.temp.moveTo(p2.x, p2.y);\n    this.ctx.temp.beginPath();\n\n    for (var i = 1, len = points.length; i < len; i++) {\n      // we pick the point between pi+1 & pi+2 as the\n      // end point and p1 as our control point\n      var midPoint = midPointBtw(p1, p2);\n      this.ctx.temp.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n      p1 = points[i];\n      p2 = points[i + 1];\n    }\n    // Draw last line as a straight line while\n    // we wait for the next point to be able to calculate\n    // the bezier control point\n    this.ctx.temp.lineTo(p1.x, p1.y);\n    this.ctx.temp.stroke();\n  };\n\n  saveLine = ({ brushColor, brushRadius } = {}) => {\n    if (this.points.length < 2) return;\n\n    // Save as new line\n    this.lines.push({\n      points: [...this.points],\n      brushColor: brushColor || this.props.brushColor,\n      brushRadius: brushRadius || this.props.brushRadius,\n    });\n\n    // Reset points array\n    this.points.length = 0;\n\n    // Copy the line to the drawing canvas\n    this.inClientSpace([this.ctx.drawing, this.ctx.temp], () => {\n      this.ctx.drawing.drawImage(\n        this.canvas.temp,\n        0,\n        0,\n        this.canvas.drawing.width,\n        this.canvas.drawing.height\n      );\n    });\n\n    // Clear the temporary line-drawing canvas\n    this.clearWindow(this.ctx.temp);\n\n    this.triggerOnChange();\n  };\n\n  triggerOnChange = () => {\n    this.props.onChange && this.props.onChange(this);\n  };\n\n  clearWindow = (ctx) => {\n    this.inClientSpace([ctx], () =>\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n    );\n  };\n\n  clearExceptErasedLines = () => {\n    this.lines = [];\n    this.valuesChanged = true;\n    this.clearWindow(this.ctx.drawing);\n    this.clearWindow(this.ctx.temp);\n  };\n\n  loop = ({ once = false } = {}) => {\n    if (this.mouseHasMoved || this.valuesChanged) {\n      const pointer = this.lazy.getPointerCoordinates();\n      const brush = this.lazy.getBrushCoordinates();\n\n      this.drawInterface(this.ctx.interface, pointer, brush);\n      this.mouseHasMoved = false;\n      this.valuesChanged = false;\n    }\n\n    if (!once) {\n      window.requestAnimationFrame(() => {\n        this.loop();\n      });\n    }\n  };\n\n  inClientSpace = (ctxs, action) => {\n    ctxs.forEach((ctx) => {\n      ctx.save();\n      ctx.setTransform(\n        IDENTITY.a,\n        IDENTITY.b,\n        IDENTITY.c,\n        IDENTITY.d,\n        IDENTITY.e,\n        IDENTITY.f\n      );\n    });\n\n    try {\n      action();\n    } finally {\n      ctxs.forEach((ctx) => ctx.restore());\n    }\n  };\n\n  ///// Canvas Rendering\n\n  drawImage = () => {\n    if (!this.props.imgSrc) return;\n\n    // Load the image\n    this.image = new Image();\n\n    // Prevent SecurityError \"Tainted canvases may not be exported.\" #70\n    this.image.crossOrigin = \"anonymous\";\n\n    // Draw the image once loaded\n    this.image.onload = this.redrawImage;\n    this.image.src = this.props.imgSrc;\n  };\n\n  drawGrid = (ctx) => {\n    if (this.props.hideGrid) return;\n\n    this.clearWindow(ctx);\n\n    const gridSize = 25;\n    const { viewMin, viewMax } = this.coordSystem.canvasBounds;\n    const minx = Math.floor(viewMin.x / gridSize - 1) * gridSize;\n    const miny = Math.floor(viewMin.y / gridSize - 1) * gridSize;\n    const maxx = viewMax.x + gridSize;\n    const maxy = viewMax.y + gridSize;\n\n    ctx.beginPath();\n    ctx.setLineDash([5, 1]);\n    ctx.setLineDash([]);\n    ctx.strokeStyle = this.props.gridColor;\n    ctx.lineWidth = this.props.gridLineWidth;\n\n    if (!this.props.hideGridX) {\n      let countX = minx;\n      const gridSizeX = this.props.gridSizeX;\n      while (countX < maxx) {\n        countX += gridSizeX;\n        ctx.moveTo(countX, miny);\n        ctx.lineTo(countX, maxy);\n      }\n      ctx.stroke();\n    }\n\n    if (!this.props.hideGridY) {\n      let countY = miny;\n      const gridSizeY = this.props.gridSizeY;\n      while (countY < maxy) {\n        countY += gridSizeY;\n        ctx.moveTo(minx, countY);\n        ctx.lineTo(maxx, countY);\n      }\n      ctx.stroke();\n    }\n  };\n\n  drawInterface = (ctx, pointer, brush) => {\n    if (this.props.hideInterface) return;\n\n    this.clearWindow(ctx);\n\n    // Draw brush preview\n    ctx.beginPath();\n    ctx.fillStyle = this.props.brushColor;\n    ctx.arc(brush.x, brush.y, this.props.brushRadius, 0, Math.PI * 2, true);\n    ctx.fill();\n\n    // Draw mouse point (the one directly at the cursor)\n    ctx.beginPath();\n    ctx.fillStyle = this.props.catenaryColor;\n    ctx.arc(pointer.x, pointer.y, 4, 0, Math.PI * 2, true);\n    ctx.fill();\n\n    // Draw catenary\n    if (this.lazy.isEnabled()) {\n      ctx.beginPath();\n      ctx.lineWidth = 2;\n      ctx.lineCap = \"round\";\n      ctx.setLineDash([2, 4]);\n      ctx.strokeStyle = this.props.catenaryColor;\n      this.catenary.drawToCanvas(\n        this.ctx.interface,\n        brush,\n        pointer,\n        this.chainLength\n      );\n      ctx.stroke();\n    }\n\n    // Draw brush point (the one in the middle of the brush preview)\n    ctx.beginPath();\n    ctx.fillStyle = this.props.catenaryColor;\n    ctx.arc(brush.x, brush.y, 2, 0, Math.PI * 2, true);\n    ctx.fill();\n  };\n}\n","/** \n * Original from: https://stackoverflow.com/questions/21961839/simulation-background-size-cover-in-canvas\n * Original By Ken Fyrstenberg Nilsen\n * \n * Note: img must be fully loaded or have correct width & height set.\n */\nexport default function drawImageProp({ctx, img, x, y, w, h, offsetX, offsetY} = {}) {\n  // Defaults\n  if (typeof x !== \"number\") x = 0;\n  if (typeof y !== \"number\") y = 0;\n  if (typeof w !== \"number\") w = ctx.canvas.width;\n  if (typeof h !== \"number\") h = ctx.canvas.height;\n  if (typeof offsetX !== \"number\") offsetX = 0.5;\n  if (typeof offsetY !== \"number\") offsetY = 0.5;\n\n  // keep bounds [0.0, 1.0]\n  if (offsetX < 0) offsetX = 0;\n  if (offsetY < 0) offsetY = 0;\n  if (offsetX > 1) offsetX = 1;\n  if (offsetY > 1) offsetY = 1;\n\n  var iw = img.width,\n    ih = img.height,\n    r = Math.min(w / iw, h / ih),\n    nw = iw * r, // new prop. width\n    nh = ih * r, // new prop. height\n    cx,\n    cy,\n    cw,\n    ch,\n    ar = 1;\n\n  // decide which gap to fill\n  if (nw < w) ar = w / nw;\n  if (Math.abs(ar - 1) < 1e-14 && nh < h) ar = h / nh; // updated\n  nw *= ar;\n  nh *= ar;\n\n  // calc source rectangle\n  cw = iw / (nw / w);\n  ch = ih / (nh / h);\n\n  cx = (iw - cw) * offsetX;\n  cy = (ih - ch) * offsetY;\n\n  // make sure source rectangle is valid\n  if (cx < 0) cx = 0;\n  if (cy < 0) cy = 0;\n  if (cw > iw) cw = iw;\n  if (ch > ih) ch = ih;\n\n  // fill image in dest. rectangle\n  ctx.drawImage(img, cx, cy, cw, ch, x, y, w, h);\n}\n"],"sourceRoot":""}